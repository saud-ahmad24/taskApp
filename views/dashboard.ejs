<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        form {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input[type="text"],
        select,
        input[type="date"] {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            border-radius: 4px;
        }

        li:hover {
            background-color: #f0f0f0;
        }

        span {
            display: inline-block;
            min-width: 100px;
            margin-right: 10px;
        }

        #popupContainer {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        #popupContainer form {
            margin: 0;
        }

        .popupButton {
            background-color: #007bff;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
        }

        .popupButton:hover {
            background-color: #0056b3;
        }

        #overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
            display: none;
        }
    </style>
</head>

<body>
    
    <nav>
        <ul>
            <li><a href="/logout">Logout</a></li>
        </ul>
    </nav>

    <form id="createTaskForm" action="/tasks" method="post">
        <label for="description">Description:</label>
        <input type="text" id="description" name="description" required><br>
        <label for="priority">Priority:</label>
        <select id="priority" name="priority">
            <option value="high">High</option>
            <option value="medium" selected>Medium</option>
            <option value="low">Low</option>
        </select><br>
        <label for="dueDate">Due Date:</label>
        <input type="date" id="dueDate" name="dueDate"><br>
        <label for="tags">Tags:</label>
        <input type="text" id="tags" name="tags"><br>
        <button type="submit">Add Task</button>
    </form>

    <!-- Form to update a task (hidden by default) -->
    <div id="popupContainer" style="display: none;">
        <form id="updateForm" onsubmit="event.preventDefault();">
            <input type="hidden" id="taskId" name="taskId">
            <label for="description">Description:</label>
            <input type="text" id="descriptionUpdate" name="description" required><br>
            <label for="priority">Priority:</label>
            <select id="priorityUpdate" name="priority">
                <option value="high">High</option>
                <option value="medium">Medium</option>
                <option value="low">Low</option>
            </select><br>
            <label for="dueDate">Due Date:</label>
            <input type="date" id="dueDateUpdate" name="dueDate"><br>
            <label for="tags">Tags:</label>
            <input type="text" id="tagsUpdate" name="tags"><br>
            <button type="button" onclick="updateTask()">Update Task</button>
            <button type="button" onclick="cancelUpdate()">Cancel</button>
        </form>
    </div>

    <!-- List of tasks -->
    <ul id="taskList">
        <% tasks.forEach(task=> { %>
            <li data-id="<%= task._id %>">
                <span class="description">
                    <%= task.description %>
                </span>
                <span class="priority">
                    <%= task.priority %>
                </span>
                <span class="dueDate">
                    <%= task.dueDate %>
                </span>
                <span class="tags">
                    <%= task.tags %>
                </span>
                <button onclick="openUpdateForm('<%= task._id %>')">Edit</button>
                <form id="deleteForm_<%= task._id %>" action="/tasks/<%= task._id %>" method="post"
                    style="display: inline;" onsubmit="event.preventDefault();">
                    <input type="hidden" name="_method" value="DELETE">
                    <button type="button" onclick="confirmDelete('<%= task._id %>')">Delete</button>
                </form>
            </li>
            <% }); %>
    </ul>

    <script>
        function openUpdateForm(taskId) {
            const task = document.querySelector(`#taskList li[data-id="${taskId}"]`);
            const popup = document.getElementById('popupContainer');
            popup.querySelector('#taskId').value = taskId;
            popup.querySelector('#descriptionUpdate').value = task.querySelector('.description').innerText;
            popup.querySelector('#priorityUpdate').value = task.querySelector('.priority').innerText;

            // Retrieve the dueDate value and format it properly
            const dueDate = task.querySelector('.dueDate').innerText;
            popup.querySelector('#dueDateUpdate').value = dueDate ? formatDate(dueDate) : '';

            popup.querySelector('#tagsUpdate').value = task.querySelector('.tags').innerText;
            popup.style.display = 'block';
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const year = date.getFullYear();
            let month = (1 + date.getMonth()).toString().padStart(2, '0');
            let day = date.getDate().toString().padStart(2, '0');

            return `${year}-${month}-${day}`;
        }


        function cancelUpdate() {
            document.getElementById('popupContainer').style.display = 'none';
        }

        function confirmDelete(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                fetch(`/tasks/${taskId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': 'Bearer token'
                    }
                })
                    .then(response => {
                        window.location.href = '/tasks';
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Handle error
                    });
            }
        }

        function updateTask() {
            console.log("Hiiiii")
            const form = document.getElementById('updateForm');
            const taskId = form.querySelector('#taskId').value;
            const updatedTask = {
                description: form.querySelector('#descriptionUpdate').value,
                priority: form.querySelector('#priorityUpdate').value,
                dueDate: form.querySelector('#dueDateUpdate').value,
                tags: form.querySelector('#tagsUpdate').value
            };
            if(taskId){
                fetch(`/tasks/${taskId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer token'
                },
                body: JSON.stringify(updatedTask)
            })
                .then(response => {
                    window.location.href = '/tasks';
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Handle error
                })
                .finally(() => {
                    document.getElementById('popupContainer').style.display = 'none';
                });
            }
        }
    </script>

</body>

</html>